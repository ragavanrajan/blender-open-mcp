openapi: 3.0.0
info:
  title: Blender MCP API
  description: AI-powered Blender automation through Model Context Protocol
  version: 1.0.0
servers:
  - url: https://blender-open-mcp-gphpdbg7cccdcsf8.newzealandnorth-01.azurewebsites.net

paths:
  /health:
    get:
      summary: Health Check
      description: Check if the server is running and Blender is connected
      operationId: GetHealth
      responses:
        '200':
          description: Server status
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "ok"
                  blender_connected:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Server running, Blender connected"

  /api/blender/scene:
    get:
      summary: Get Scene Information
      description: Retrieve current Blender scene details including objects, materials, and settings
      operationId: GetSceneInfo
      responses:
        '200':
          description: Scene information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/blender/create:
    post:
      summary: Create Object
      description: Create a new 3D object in Blender with specified properties
      operationId: CreateObject
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [type, name]
              properties:
                type:
                  type: string
                  enum: [CUBE, SPHERE, CYLINDER, PLANE, CONE, TORUS, MONKEY]
                  description: Type of object to create
                  example: "CUBE"
                name:
                  type: string
                  description: Name for the new object
                  example: "MyCube"
                location:
                  type: array
                  items:
                    type: number
                  minItems: 3
                  maxItems: 3
                  default: [0, 0, 0]
                  description: 3D position [X, Y, Z]
                  example: [1.0, 2.0, 0.5]
                rotation:
                  type: array
                  items:
                    type: number
                  minItems: 3
                  maxItems: 3
                  default: [0, 0, 0]
                  description: 3D rotation [RX, RY, RZ] in radians
                  example: [0, 0, 1.57]
                scale:
                  type: array
                  items:
                    type: number
                  minItems: 3
                  maxItems: 3
                  default: [1, 1, 1]
                  description: 3D scale [SX, SY, SZ]
                  example: [2.0, 1.0, 1.0]
      responses:
        '200':
          description: Object created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponse'
        '400':
          description: Bad request - invalid parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/blender/modify:
    put:
      summary: Modify Object
      description: Modify an existing object's transform properties
      operationId: ModifyObject
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [name]
              properties:
                name:
                  type: string
                  description: Name of object to modify
                  example: "Cube"
                location:
                  type: array
                  items:
                    type: number
                  minItems: 3
                  maxItems: 3
                  description: New 3D position [X, Y, Z]
                  example: [5.0, 0.0, 2.0]
                rotation:
                  type: array
                  items:
                    type: number
                  minItems: 3
                  maxItems: 3
                  description: New 3D rotation [RX, RY, RZ] in radians
                  example: [0, 0, 3.14]
                scale:
                  type: array
                  items:
                    type: number
                  minItems: 3
                  maxItems: 3
                  description: New 3D scale [SX, SY, SZ]
                  example: [1.5, 1.5, 1.5]
      responses:
        '200':
          description: Object modified successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponse'
        '404':
          description: Object not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/blender/delete/{id}:
    delete:
      summary: Delete Object
      description: Delete an object from the Blender scene
      operationId: DeleteObject
      parameters:
        - name: id
          in: path
          required: true
          description: Object identifier
          schema:
            type: string
            minLength: 1
            maxLength: 100
            example: "Cube"
      responses:
        '200':
          description: Object deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponse'
        '404':
          description: Object not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/blender/remove:
    post:
      summary: Remove Object (Alternative)
      description: Remove an object from the Blender scene using POST
      operationId: RemoveObject
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [object_name]
              properties:
                object_name:
                  type: string
                  description: Name of object to remove
                  example: "Cube"
      responses:
        '200':
          description: Object removed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponse'
        '404':
          description: Object not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/blender/material:
    post:
      summary: Apply Material
      description: Apply material and color to an object in Blender
      operationId: ApplyMaterial
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [object_name, material_name]
              properties:
                object_name:
                  type: string
                  description: Name of target object
                  example: "Cube"
                material_name:
                  type: string
                  description: Name of material to apply
                  example: "Gold"
                color:
                  type: array
                  items:
                    type: number
                    minimum: 0
                    maximum: 1
                  minItems: 3
                  maxItems: 3
                  default: [0.5, 0.5, 0.5]
                  description: RGB color values [R, G, B] from 0.0 to 1.0
                  example: [1.0, 0.8, 0.0]
      responses:
        '200':
          description: Material applied successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponse'
        '404':
          description: Object not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/blender/code:
    post:
      summary: Execute Python Code
      description: Execute custom Python code in Blender
      operationId: ExecuteCode
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [command]
              properties:
                command:
                  type: string
                  description: Python code to execute
                  example: "bpy.ops.mesh.primitive_cube_add(location=(0, 0, 2))"
                description:
                  type: string
                  description: Description of what the code does
                  example: "Add a cube at height 2"
      responses:
        '200':
          description: Code executed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponse'
        '400':
          description: Invalid Python code
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/ai/prompt:
    post:
      summary: AI-Powered Operation
      description: Execute operations using natural language through AI
      operationId: AiPrompt
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [prompt]
              properties:
                prompt:
                  type: string
                  description: Natural language description of what to do
                  example: "Create a red sphere and move it above the default cube"
                context:
                  type: string
                  description: Additional context or constraints
                  example: "Make it suitable for a product render"
      responses:
        '200':
          description: AI operation completed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AIResponse'
        '400':
          description: Invalid prompt
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    APIResponse:
      type: object
      properties:
        success:
          type: boolean
          description: Whether the operation succeeded
          example: true
        message:
          type: string
          description: Success or error message
          example: "Object created successfully"
        data:
          type: object
          description: Additional response data
          example: {"object_name": "Cube.001", "location": [0, 0, 0]}

    AIResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
          example: "AI operation completed successfully"
        analysis:
          type: string
          description: AI analysis of the request
          example: "User wants to create a red sphere positioned above the default cube"
        actions_taken:
          type: array
          items:
            type: string
          description: List of actions performed
          example: ["Created sphere", "Applied red material", "Positioned at (0, 0, 2)"]
        result:
          type: object
          description: Operation results
          example: {"objects_created": 1, "materials_applied": 1}

    ErrorResponse:
      type: object
      properties:
        success:
          type: boolean
          example: false
        message:
          type: string
          description: Error message
          example: "Object not found in scene"
        error_code:
          type: string
          description: Specific error code
          example: "OBJECT_NOT_FOUND"

  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key
      description: API key for authentication (optional for development) 